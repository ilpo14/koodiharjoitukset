# For example, the base [1, 4, 6] gives us the following pyramid
#     15
#   5   10
# 1   4    6

def pyramid_sum(base)
  pyramidarray = [base]

  
  	while pyramidarray.length < base.length
      	prev_level = pyramidarray[0]
      	next_level = adjacent_sum(prev_level)
      	pyramidarray.unshift(next_level)
    end
  return pyramidarray
end
  
  
def adjacent_sum(arr)
  	new_arr = []
  
  arr.each_with_index do |ele, i|
    if i != arr.length - 1
      new_arr << arr[i] + arr[i + 1]
    end
  end
  return new_arr
end
  
  
  

print pyramid_sum([1, 4, 6]) #=> [[15], [5, 10], [1, 4, 6]]
puts

print pyramid_sum([3, 7, 2, 11]) #=> [[41], [19, 22], [10, 9, 13], [3, 7, 2, 11]]
puts
